package club.cser.leetcode;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

public class StoneGameVTest {
    private StoneGameV s;

    @Before
    public void init() {
        s = new StoneGameV();
    }

    @Test
    public void basicTest1() {
        int[] nums = {6,2,3,4,5,5};
        int res = 18;

        Assert.assertEquals(res, s.stoneGameV1(nums));
    }

    @Test
    public void basicTest2() {
        int[] nums = {7,7,7,7,7,7,7};
        int res = 28;

        Assert.assertEquals(res, s.stoneGameV1(nums));
    }

    @Test
    public void basicTest3() {
        int[] nums = {4};
        int res = 0;

        Assert.assertEquals(res, s.stoneGameV1(nums));
    }

    // 超时用例
    @Test
    @Ignore
    public void basicTest4() {
        int[] nums = {999935,994453,992746,992154,990682,990435,990016,987820,987301,986644,986040,985835,984923,984830,982905,981293,979750,977366,976209,973152,971575,970890,969006,967969,967706,965576,964560,960142,959316,956947,954317,952956,952882,948128,946287,945968,945688,939706,932970,932228,930694,925389,923731,923523,921407,921048,918682,914144,913797,911369,910094,909088,906475,906026,904089,903913,892890,891210,889442,884304,880807,878163,877754,877393,875094,873651,871382,867572,864400,859637,854161,852167,850204,849355,848991,844171,841546,836615,834737,833585,831866,830692,829888,825838,825585,824002,819363,816217,815314,812466,812210,810912,808992,808551,808481,807655,807291,804737,800758,798480,797321,795548,793396,790138,789083,787262,786902,786296,785030,784185,778977,778093,776764,776317,774116,771329,768625,763847,763422,762421,761758,756032,747841,746600,744742,743512,736307,734962,733054,729488,729274,727090,726792,726005,725110,725098,723758,723067,721198,717108,713865,710280,709460,707252,705271,702574,701223,698276,695057,691781,689235,687585,686643,684401,679484,675113,675003,673678,673389,667684,666080,665851,664628,663200,658393,658055,657818,656695,654535,652948,652275,652128,651776,649582,648440,647813,644447,642467,641549,640615,637596,635921,635905,630134,629826,628687,627716,627310,626237,625135,623437,622331,620235,618401,614536,614246,613850,612399,610732,608305,607174,604723,596351,595833,593787,593464,593228,592745,590169,590138,590109,582917,580003,579578,576073,575168,573295,571400,570793,570041,569447,569079,568874,567505,566047,563971,563465,561864,560915,553968,553790,553602,553584,552876,548774,546562,546293,544792,544680,544006,539730,538003,537909,531572,531454,528473,527344,521873,521335,520843,514864,514481,512013,510649,509800,508662,506266,505036,499634,498244,498100,497084,490527,489819,488941,483728,483172,480930,480678,479400,478367,473786,470693,470361,467655,467126,464908,460951,460925,456593,446888,446382,443890,440056,438353,438260,437116,437090,436436,436100,433883,433823,432429,431931,430636,428691,426186,425901,423418,423074,422374,421743,419335,415750,415436,414518,413565,412376,400450,394278,393828,392169,387024,385297,379080,378610,377054,375897,373165,372704,371691,368575,355684,355511,354411,353827,353007,352712,352146,348749,345139,341674,340470,339684,339046,337590,335133,333853,333433,328755,327781,326694,325902,323923,323883,323562,323066,322706,312731,311740,309745,305089,303515,301321,301124,296817,296710,296011,295250,293486,291409,289202,288264,287092,286344,284489,281560,279197,278133,275026,274965,271326,269852,267788,267486,266349,260600,260182,259528,259255,254286,249251,246780,245533,245260,243477,243214,241991,241549,238880,235268,232587,231507,231057,226146,223529,218706,215011,212293,202702,201568,200994,200306,200273,199448,196946,195191,195086,193846,193134,192518,191361,191155,189265,186397,182994,176904,175927,174893,173310,168933,167935,167639,164756,162998,162644,162206,162018,160852,158041,157523,154815,151185,150528,147138,144862,142713,141393,140096,140053,138297,138013,134651,129332,127090,124797,121585,120799,120114,118662,117863,115113,113150,112322,111524,105860,105514,105282,103291,95403,95282,93471,91790,89398,89090,88224,88095,87381,85006,84515,83978,82201,82120,81884,81511,78861,73880,72435,71897,69290,64364,60580,56659,52438,48834,43031,41771,40092,37737,24720,24021,23645,14250,12002,7921,7326,6988,4171,3871,2677};
        int res = 251457577;

        Assert.assertEquals(res, s.stoneGameV1(nums));
    }

    @Test
    public void basicTest5() {
        int[] nums = {100, 50, 40, 40};
        int res = 120;

        Assert.assertEquals(res, s.stoneGameV1(nums));
    }

}
